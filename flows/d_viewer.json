[{"id":"909f7ad4.2dc328","type":"tab","label":"viewer3d","disabled":false,"info":""},{"id":"5db9a7b7.d544d8","type":"change","z":"909f7ad4.2dc328","name":"Find OBJs","rules":[{"t":"set","p":"payload","pt":"msg","to":"$.payload.data[\ttype=\"shapeRepresentation\" and\trepresentationType=\"OBJ\"\t]","tot":"jsonata"},{"t":"set","p":"topic","pt":"msg","to":"OBJs","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":570,"y":620,"wires":[["58cb34a.68f6ccc"]]},{"id":"58cb34a.68f6ccc","type":"change","z":"909f7ad4.2dc328","name":"{globalId, OBJ}","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload{\t   \"data\": $.{\t       \"globalId\": globalId,\t       \"OBJ\": items[0]\t}\t}\t\t\t","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":760,"y":660,"wires":[["7e074360.d8c56c"]]},{"id":"4b293197.f638f","type":"change","z":"909f7ad4.2dc328","name":"All but shapeReps","rules":[{"t":"set","p":"payload","pt":"msg","to":"$.payload.data[\ttype !=\"shapeRepresentation\"\t]","tot":"jsonata"},{"t":"set","p":"topic","pt":"msg","to":"buildingElements","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":710,"y":560,"wires":[["7e074360.d8c56c"]]},{"id":"7e074360.d8c56c","type":"function","z":"909f7ad4.2dc328","name":"Attach OBJs","func":"var buildingElements = context.get(\"buildingElements\") || 0; //get from context or default to 0\nvar OBJs = context.get(\"OBJs\") || 0; //get from context or default to 0\nvar objdict = {};\n    var objdata = null;\n    var aresult;\n\n\nattachOBS = function() {\n    if (OBJs == 0 || buildingElements == 0) return;\n            //console.log(OBJs.data);   \n    objdict = {};\n        var i;\n    \n        for ( i = 0 ; i < OBJs.data.length; i++ ) {\n            var apair = OBJs.data[i];\n            //console.log(apair);\n         objdict[apair.globalId] = apair.OBJ;\n        }\n     \n    for ( i = 0 ; i < buildingElements.length; i++ ) {\n        if(buildingElements[i].representations) {\n            var aref = buildingElements[i].representations[0].ref;\n            //console.log(aref);\n            \n             aresult = objdict[aref];\n            //console.log(aresult);\n\n         \n            buildingElements[i].OBJ = aresult;\n            //console.log(buildingElements[i].OBJ);\n        }\n    }\n}\n\nswitch (msg.topic){\n    case \"buildingElements\":\n        console.log(\"buildingElements\");\n        buildingElements = msg.payload; //payload NOT paydoad  :)\n        context.set(\"buildingElements\", buildingElements); //store in context for next time \n        attachOBS();\n        break;\n    case \"OBJs\":\n        console.log(\"OBJs\");\n        OBJs = msg.payload; //payload NOT paydoad  :)\n        context.set(\"OBJs\", OBJs); //store in context for next time \n        attachOBS();\n        break;\n}\n\n\n\nmsg.topic = \"go\";\nmsg.payload = buildingElements;\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":560,"wires":[["4f4a3f15.22bdb"]]},{"id":"de610edc.b94df","type":"websocket in","z":"909f7ad4.2dc328","name":"","server":"6031aed6.0c755","client":"","x":1070,"y":620,"wires":[["7f7b5ff.a76e7a","4f4a3f15.22bdb"]]},{"id":"4f4a3f15.22bdb","type":"websocket out","z":"909f7ad4.2dc328","name":"","server":"9ccee2bd.8fa7a","client":"","x":1320,"y":560,"wires":[]},{"id":"5ae91fe.4d847e","type":"http in","z":"909f7ad4.2dc328","name":"","url":"/y","method":"get","upload":false,"swaggerDoc":"","x":90,"y":100,"wires":[["81bb3db1.c00f"]]},{"id":"5cb565f5.60b44c","type":"http response","z":"909f7ad4.2dc328","name":"","statusCode":"","headers":{},"x":390,"y":100,"wires":[]},{"id":"81bb3db1.c00f","type":"template","z":"909f7ad4.2dc328","name":"y","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n\t<head>\n\t\t<title>iframe</title>\n\n\t\t<meta charset=\"utf-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t</head>\n\t<body>\n\t\t<iframe src=\"/x\" width=\"50%\" height=\"50%\"></iframe>\n\t</body>\n</html>\n","output":"str","x":240,"y":100,"wires":[["5cb565f5.60b44c"]]},{"id":"a87c9be4.7fea18","type":"http in","z":"909f7ad4.2dc328","name":"","url":"/x","method":"get","upload":false,"swaggerDoc":"","x":90,"y":40,"wires":[["f8f96eae.08a41"]]},{"id":"9d67f1dd.f46fa","type":"http response","z":"909f7ad4.2dc328","name":"","statusCode":"","headers":{},"x":390,"y":40,"wires":[]},{"id":"88cee4ac.e4c2f8","type":"websocket in","z":"909f7ad4.2dc328","name":"","server":"ccfcd4a6.36a9c8","client":"","x":150,"y":240,"wires":[["5a931724.29b6b8"]]},{"id":"5a931724.29b6b8","type":"websocket out","z":"909f7ad4.2dc328","name":"","server":"c352f9f4.c2e3d8","client":"","x":610,"y":240,"wires":[]},{"id":"595f1d92.47fb74","type":"inject","z":"909f7ad4.2dc328","name":"injectColor","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"data\":[{\"type\":\"Door\",\"color\":\"0xfa9301\",\"opacity\":0.5},{\"type\":\"Slab\",\"color\":\"0xf9a8c3\",\"opacity\":0.5},{\"type\":\"WallStandardCase\",\"color\":\"0xf90e23\",\"opacity\":0.15},{\"type\":\"Window\",\"color\":\"0xf100e4\",\"opacity\":0.5},{\"type\":\"Space\",\"color\":\"0x1232dd\",\"opacity\":0.15}]}","payloadType":"json","x":400,"y":200,"wires":[["5a931724.29b6b8"]]},{"id":"7f7b5ff.a76e7a","type":"debug","z":"909f7ad4.2dc328","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1290,"y":680,"wires":[]},{"id":"f8f96eae.08a41","type":"template","z":"909f7ad4.2dc328","name":"x","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<html>\n    <head>\n        <title>Test</title>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js\"></script>\n        <script src=\"https://threejs.org/examples/js/controls/OrbitControls.js\"></script>\n        <script>\n            var socket1=new WebSocket('ws://localhost:1880/ws/receiveMessage');\n            var socket2=new WebSocket('ws://localhost:1880/ws/sendMessage');\n            socket1.onopen=()=>{\n                socket1Opened=true;\n                var message={\n                    payload:'Client connected',\n                };\n                socket1.send(JSON.stringify(message));\n            };\n            socket2.onopen=()=>{\n                var message = {\n                    payload:'Client connected',\n                };\n                socket1.send(JSON.stringify(message));\n            };\n            socket2.onclose=()=>{\n                console.log('Connection closed');\n            };\n            socket2.onerror=(error)=>{\n                console.log('Error detected: ' + JSON.stringify(error));\n            };\n            socket2.onmessage=(e)=>{\n                var server_message=e.data;\n                responseObject=JSON.parse(server_message);\n                processData(responseObject);\n            };\n            var socket3=new WebSocket('ws://localhost:1880/ws/receiveMessage2');\n            var socket4=new WebSocket('ws://localhost:1880/ws/sendMessage2');\n            socket3.onopen=()=>{\n                socket3Opened=true;\n                var message={\n                    payload:'Client connected to 2- receive',\n                };\n                socket3.send(JSON.stringify(message));\n            };\n            socket4.onopen=()=>{\n                var message={\n                    payload: 'Client connected 2 - send',\n                };\n                socket4.send(JSON.stringify(message));\n            };\n            socket4.onclose=()=>{\n                console.log('Connection closed 2 - send');\n            };\n            socket4.onerror=(error)=>{\n                console.log('Error detected -2 send: '+JSON.stringify(error));\n            };\n            socket4.onmessage=(e)=>{\n                var server_message=e.data;\n                responseObject=JSON.parse(server_message);\n                if(responseObject.data)processData2(responseObject.data);\n            };\n            var socket5 = new WebSocket('ws://localhost:1880/ws/receiveMessage3');\n            var socket6 = new WebSocket('ws://localhost:1880/ws/sendMessage3');\n            socket5.onopen=()=>{\n                socket5Opened=true;\n                var message={\n                    payload:'Client connected to 5- receive',\n                };\n                socket5.send(JSON.stringify(message));\n            };\n            socket6.onmessage = (e) => {\n                var server_message = e.data;\n                responseObject = JSON.parse(server_message);\n                try{\n                    if(responseObject.data){\n                        B=[];\n                        responseObject.data.forEach(e=>{ B.push(e)});\n                        updateObjects();\n                    }\n                }catch(err){\n                    console.error(err);\n                }\n            };\n\n        </script>\n    </head>\n\n\n    <body>\n        <div id=\"div3d\"></div>\n        <script>\n        const updateObjects = () => {\n                console.log(\"update objects\", B.forEach(e=>console.log(B.globalId)));\n                B.forEach(e=>{\n                    b=e.globalId.toString();\n                    for(let i=0; i<ObjArr.length; i++){\n                        if(ObjArr[i].globalId.toString() === b){\n                            if(e.color) ObjArr[i].color=parseInt(e.color,16);\n                            if(e.opacity) ObjArr[i].opacity=e.opacity;\n                            if(e.hidden) ObjArr[i].hidden=e.hidden;\n                        }\n                    }\n                });\n                ObjArr.forEach(e=>{\n                    if(e.hidden===true){\n                        e.mesh.geometry.dispose();\n                        e.mesh.material.dispose();\n                        scene3d.remove(e.mesh);\n                    }\n                });\n            }\n            const processData2=(x)=> {colorInpObj = [...x]};\n            const processData=(objDataArrInp) => {\n                meshArr.forEach((e)=>{\n                    e.geometry.dispose();\n                    e.material.dispose();\n                    scene3d.remove(e);\n                });\n                meshArr=[];\n                ObjArr.forEach(obj=>{\n                    obj.mesh.geometry.dispose();\n                    obj.mesh.material.dispose();\n                    scene3d.remove(obj.mesh);\n                })\n                ObjArr=[];\n                if(!objDataArrInp) return\n                objDataArrInp.forEach((e)=>{\n                    if (!e.OBJ)return;\n                    let verts=[],faces=[];\n                    e.OBJ.split('\\n').forEach((e)=>{\n                        if(e.split(' ')[0]==='v')\n                            verts.push({x: parseFloat(e.split(' ')[1]),y:parseFloat(e.split(' ')[2]),z:parseFloat(e.split(' ')[3])});\n                        else if(e.split(' ')[0]==='f')\n                            faces.push({a:parseInt(e.split(' ')[1]),b:parseInt(e.split(' ')[2]),c:parseInt(e.split(' ')[3])});\n                    });\n                    for (let j = 0; j < colorInpObj.length; j++) {\n                        if (e.type.toString().toLowerCase() === colorInpObj[j].type.toString().toLowerCase()) {\n                            e.color = parseInt(colorInpObj[j].color, 16);\n                            e.opacity = colorInpObj[j].opacity;\n                            break;\n                        }\n                    }\n                    let material=new THREE.MeshPhongMaterial({\n                        color:e.color?e.color:0xffffff,\n                        opacity:e.opacity?e.opacity:0.2,\n                        transparent:true,\n                    });\n                    let geometry=new THREE.BufferGeometry();\n                    let points=[];\n                    faces.forEach((f)=>{\n                        points.push(verts[f.a],verts[f.b],verts[f.c]);\n                    });\n                    geometry.setFromPoints(points);\n                    geometry.computeVertexNormals();\n                    let me=new THREE.Mesh(geometry, material);\n                    ObjArr.push({\n                        mesh:me,\n                        globalId:e.globalId,\n                        type:e.type,\n                        selected:false,\n                        color:e.color?e.color:0xffffff,\n                        opacity:e.opacity?e.opacity:0.2,\n                        hidden:false,\n                    });\n                });\n                ObjArr.forEach((obj)=>{\n                    if(obj.hidden===false)scene3d.add(obj.mesh);\n                });\n            };\n            const init=()=>{\n                scene3d=new THREE.Scene();\n                scene3d.background=new THREE.Color(0xffffff);\n                camera3d=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,0.1,10000);\n                camera3d.up=new THREE.Vector3(0,0,1);\n                camera3d.position.set(20,20,20);\n                renderer3d=new THREE.WebGLRenderer();\n                renderer3d.setSize(window.innerWidth, window.innerHeight);\n                document.getElementById('div3d').appendChild(renderer3d.domElement);\n                raycaster=new THREE.Raycaster();\n                controls=new THREE.OrbitControls(camera3d,renderer3d.domElement);\n                controls.addEventListener('change',update);\n                scene3d.add(new THREE.AxesHelper(10));\n                scene3d.add(new THREE.AmbientLight(0xffffff));\n                document.addEventListener('mousedown', onMouseDown, false);\n                render();\n            }\n            document.addEventListener('keyup',(e)=>{e.keyCode === 91?(select=false):(select=true);},false);\n            document.addEventListener('keydown',({key})=>{if(key==='Escape'){ObjArr.forEach((obj)=>(obj.selected=false));}});\n            const onMouseDown=(e)=>{\n                document.addEventListener('keydown',()=> {select=true;},false);\n                mouse.x=(e.clientX/window.innerWidth)* 2-1;\n                mouse.y=-(e.clientY/window.innerHeight)*2+1;\n                raycaster.setFromCamera(mouse, camera3d);\n                let intersects=raycaster.intersectObjects(scene3d.children);\n                if (intersects.length>0 && intersects[0].object.type==='Mesh'){\n                    const me=ObjArr.filter((obj)=>obj.mesh.uuid===intersects[0].object.uuid)[0];\n                    console.log(me);\n                    if(select)me.selected=!me.selected;\n                    else\n                        ObjArr.filter((obj) =>\n                            obj.mesh.uuid===intersects[0].object.uuid?(obj.selected = true):(obj.selected = false)\n                        );\n                } else ObjArr.forEach((obj)=>(obj.selected=false));\n                let selArr=[];\n                ObjArr.forEach(e=>{\n                    if(e.selected){selArr.push(e.globalId);}\n                });\n                let sel={\"ids\":selArr};\n                if(socket1Opened)socket1.send(JSON.stringify(sel));\n            }\n            function update() {\n                camera3d.aspect=window.innerWidth/window.innerHeight;\n                renderer3d.setSize(window.innerWidth,window.innerHeight);\n                camera3d.updateProjectionMatrix();\n            }\n            function render() {\n                update();\n                let m2=new THREE.MeshPhongMaterial({color:0xff0000,opacity:0.5,transparent:true});\n                ObjArr.forEach((obj)=>obj.selected?(obj.mesh.material=m2):(obj.mesh.material=new THREE.MeshPhongMaterial({color:obj.color,opacity:obj.opacity,transparent:true})));\n                renderer3d.render(scene3d,camera3d);\n                requestAnimationFrame(render);\n            }\n        </script>\n        <script>\n            var scene3d, camera3d, renderer3d, controls3d, raycaster;\n            var meshArr = [];\n            var ObjArr = [];\n            var mouse = new THREE.Vector2();\n            var colorInpObj = [];\n            var select = false;\n            var A;\n            var B=[];\n            init();\n        </script>\n    </body>\n\n</html>\n","output":"str","x":230,"y":40,"wires":[["9d67f1dd.f46fa"]]},{"id":"9c1a7fca.8f503","type":"websocket out","z":"909f7ad4.2dc328","name":"","server":"c690250b.ef0018","client":"","x":650,"y":400,"wires":[]},{"id":"566a8e23.79aba","type":"websocket in","z":"909f7ad4.2dc328","name":"","server":"acb4c4c4.538918","client":"","x":150,"y":400,"wires":[["9c1a7fca.8f503"]]},{"id":"ced90a09.846488","type":"inject","z":"909f7ad4.2dc328","name":"inject-IFCJSON snippet","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"data\":[{\"globalId\":\"4c8d2570-3244-4e75-8237-a4372a40e82b\",\"color\":\"0xff00ff\",\"opacity\":1,\"hidden\":true}]}","payloadType":"json","x":360,"y":340,"wires":[["9c1a7fca.8f503"]]},{"id":"bc466ec4.2a943","type":"inject","z":"909f7ad4.2dc328","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":560,"wires":[["c305093f.ee638"]]},{"id":"8905446e.58843","type":"json","z":"909f7ad4.2dc328","name":"","property":"payload","action":"","pretty":false,"x":410,"y":560,"wires":[["5db9a7b7.d544d8","4b293197.f638f"]]},{"id":"c305093f.ee638","type":"http request","z":"909f7ad4.2dc328","name":"","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://raw.githubusercontent.com/ifcnodered/node-red/master/lib/data/ifcJsonData.json","tls":"","persist":false,"proxy":"","authType":"","x":270,"y":560,"wires":[["8905446e.58843"]]},{"id":"6031aed6.0c755","type":"websocket-listener","path":"/ws/receiveMessage","wholemsg":"false"},{"id":"9ccee2bd.8fa7a","type":"websocket-listener","path":"/ws/sendMessage","wholemsg":"false"},{"id":"ccfcd4a6.36a9c8","type":"websocket-listener","path":"/ws/receiveMessage2","wholemsg":"false"},{"id":"c352f9f4.c2e3d8","type":"websocket-listener","path":"/ws/sendMessage2","wholemsg":"false"},{"id":"c690250b.ef0018","type":"websocket-listener","path":"/ws/sendMessage3","wholemsg":"false"},{"id":"acb4c4c4.538918","type":"websocket-listener","path":"/ws/receiveMessage3","wholemsg":"false"}]